syntax = "proto3";

package fs;

option java_multiple_files = false;
option java_package = "io.activej.fs.tcp";
option java_outer_classname = "FsMessagingProto";

message FsRequest {
  message Upload {
    string name = 1;
    int64 size = 2;
  }

  message Append {
    string name = 1;
    int64 offset = 2;
  }

  message Download {
    string name = 1;
    int64 offset = 2;
    int64 limit = 3;
  }

  message Copy {
    string name = 1;
    string target = 2;
  }

  message CopyAll {
    map<string, string> source_to_target = 1;
  }

  message Move {
    string name = 1;
    string target = 2;
  }

  message MoveAll {
    map<string, string> source_to_target = 1;
  }

  message Delete {
    string name = 1;
  }

  message DeleteAll {
    repeated string to_delete = 1;
  }

  message List {
    string glob = 1;
  }

  message Info {
    string name = 1;
  }

  message InfoAll {
    repeated string names = 1;
  }

  message Ping {
  }

  oneof request {
    Upload upload = 1;
    Append append = 2;
    Download download = 3;
    Copy copy = 4;
    CopyAll copy_all = 5;
    Move move = 6;
    MoveAll move_all = 7;
    Delete delete = 8;
    DeleteAll delete_all = 9;
    List list = 10;
    Info info = 11;
    InfoAll info_all = 12;
    Ping ping = 13;
  }
}

message FsResponse {
  message UploadAck {
  }

  message UploadFinished {
  }

  message AppendAck {
  }

  message AppendFinished {
  }

  message DownloadSize {
    int64 size = 1;
  }

  message CopyFinished {
  }

  message CopyAllFinished {
  }

  message MoveFinished {
  }

  message MoveAllFinished {
  }

  message FileMetadata {
    int64 size = 1;
    int64 timestamp = 2;
  }

  message NullableFileMetadata {
    oneof metadata {
      bool is_null = 1;
      FileMetadata value = 2;
    }
  }

  message ListFinished {
    map<string, FileMetadata> files = 1;
  }

  message InfoFinished {
    NullableFileMetadata nullable_file_metadata = 1;
  }

  message InfoAllFinished {
    map<string, FileMetadata> files = 1;
  }

  message DeleteFinished {
  }

  message DeleteAllFinished {
  }

  message Pong {
  }

  message ServerError {
    message FsException {
      string message = 1;
    }

    message FsStateException {
      string message = 1;
    }

    message FsScalarException {
      string message = 1;
    }

    message OneOfFsScalarExceptions {
      oneof exception {
        FsScalarException fs_scalar_exception = 1;
        PathContainsFileException path_contains_file_exception = 2;
        IllegalOffsetException illegal_offset_exception = 3;
        FileNotFoundException file_not_found_exception = 4;
        ForbiddenPathException forbidden_path_exception = 5;
        MalformedGlobException malformed_glob_exception = 6;
        IsADirectoryException is_a_directory_exception = 7;
      }
    }

    message PathContainsFileException {
      string message = 1;
    }

    message IllegalOffsetException {
      string message = 1;
    }

    message FileNotFoundException {
      string message = 1;
    }

    message ForbiddenPathException {
      string message = 1;
    }

    message MalformedGlobException {
      string message = 1;
    }

    message IsADirectoryException {
      string message = 1;
    }

    message FsIOException {
      string message = 1;
    }

    message FsBatchException {
      map<string, OneOfFsScalarExceptions> exceptions = 1;
    }

    oneof error {
      FsBatchException fs_batch_exception = 1;
      FsException fs_exception = 2;
      FsStateException fs_state_exception = 3;
      FsScalarException fs_scalar_exception = 4;
      PathContainsFileException path_contains_file_exception = 5;
      IllegalOffsetException illegal_offset_exception = 6;
      FileNotFoundException file_not_found_exception = 7;
      ForbiddenPathException forbidden_path_exception = 8;
      MalformedGlobException malformed_glob_exception = 9;
      IsADirectoryException is_a_directory_exception = 10;
      FsIOException fs_io_exception = 11;
    }
  }

  oneof response {
    ServerError server_error = 1;
    UploadAck upload_ack = 2;
    UploadFinished upload_finished = 3;
    AppendAck append_ack = 4;
    AppendFinished append_finished = 5;
    DownloadSize download_size = 6;
    CopyFinished copy_finished = 7;
    CopyAllFinished copy_all_finished = 8;
    MoveFinished move_finished = 9;
    MoveAllFinished move_all_finished = 10;
    ListFinished list_finished = 11;
    InfoFinished info_finished = 12;
    InfoAllFinished info_all_finished = 13;
    DeleteFinished delete_finished = 14;
    DeleteAllFinished delete_all_finished = 15;
    Pong pong = 16;
  }
}